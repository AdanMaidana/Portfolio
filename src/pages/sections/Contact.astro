<section
  id="contact"
  class="body-font relative mx-auto scroll-mt-[5rem] px-4 pb-36"
>
  <header class="mb-10 flex justify-center items-end gap-x-3">
    <h2
      class="text-4xl font-bold text-center text-emerald-400 flex justify-center items-end gap-x-3 italic opacity-0"
    >
      Contactame
    </h2>
    <svg
      class="opacity-0"
      width="36px"
      height="36px"
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      ><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g
        id="SVGRepo_tracerCarrier"
        stroke-linecap="round"
        stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier">
        <path
          d="M8 10H16M8 14H16M21.0039 12C21.0039 16.9706 16.9745 21 12.0039 21C9.9675 21 3.00463 21 3.00463 21C3.00463 21 4.56382 17.2561 3.93982 16.0008C3.34076 14.7956 3.00391 13.4372 3.00391 12C3.00391 7.02944 7.03334 3 12.0039 3C16.9745 3 21.0039 7.02944 21.0039 12Z"
          stroke="#c2ffe2"
          stroke-width="0.8399999999999999"
          stroke-linecap="round"
          stroke-linejoin="round"></path>
      </g></svg
    >
  </header>

  <div class="aboveContactForm mb-10 opacity-0">
    <p class="text-center text-white text-xl mb-4">
      Dejame un mensaje y te respondere cuanto antes
    </p>

    <svg
      class="mx-auto arrowDown"
      width="30px"
      height="30px"
      class="mx-auto mb-8"
      viewBox="0 0 32.00 32.00"
      version="1.1"
      xmlns="http://www.w3.org/2000/svg"
      xmlns:xlink="http://www.w3.org/1999/xlink"
      xmlns-sketch="http://www.bohemiancoding.com/sketch/ns"
      fill="#c2ffe2"
      stroke="#c2ffe2"
      ><g id="SVGRepo_bgCarrier" stroke-width="0"
        ><rect
          x="0"
          y="0"
          width="32.00"
          height="32.00"
          rx="16"
          fill="#000"
          stroke-width="0"></rect></g
      ><g
        id="SVGRepo_tracerCarrier"
        stroke-linecap="round"
        stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier">
        <title>arrow-down-circle</title>
        <desc>Created with Sketch Beta.</desc>
        <defs> </defs>
        <g
          id="Page-1"
          stroke="none"
          stroke-width="1"
          fill="none"
          fill-rule="evenodd"
          sketch-type="MSPage"
        >
          <g
            id="Icon-Set-Filled"
            sketch-type="MSLayerGroup"
            transform="translate(-414.000000, -1089.000000)"
            fill="#00ffa6"
          >
            <path
              d="M436.535,1105.88 L430.879,1111.54 C430.639,1111.78 430.311,1111.85 430,1111.79 C429.689,1111.85 429.361,1111.78 429.121,1111.54 L423.465,1105.88 C423.074,1105.49 423.074,1104.86 423.465,1104.46 C423.855,1104.07 424.488,1104.07 424.879,1104.46 L429,1108.59 L429,1098 C429,1097.45 429.448,1097 430,1097 C430.553,1097 431,1097.45 431,1098 L431,1108.59 L435.121,1104.46 C435.512,1104.07 436.146,1104.07 436.535,1104.46 C436.926,1104.86 436.926,1105.49 436.535,1105.88 L436.535,1105.88 Z M430,1089 C421.163,1089 414,1096.16 414,1105 C414,1113.84 421.163,1121 430,1121 C438.837,1121 446,1113.84 446,1105 C446,1096.16 438.837,1089 430,1089 L430,1089 Z"
              id="arrow-down-circle"
              sketch-type="MSShapeGroup"
            >
            </path>
          </g>
        </g>
      </g></svg
    >
  </div>

  <main id="contact-main">
    <form id="form" class="flex flex-wrap max-w-3xl mx-auto opacity-0">
      <!-- form -->
      <div class="w-full p-2 md:w-1/2">
        <div class="relative">
          <input
            type="text"
            name="user_name"
            id="user_name"
            required
            class="peer w-full rounded border border-gray-700 hover:border-white bg-gray-800 bg-opacity-40 py-1 px-3 text-base leading-8 text-gray-100 placeholder-transparent outline-none transition-colors duration-200 ease-in-out focus:border-gray-600 focus:bg-gray-800 focus:ring-2 focus:ring-zinc-400"
            placeholder=""
          />
          <label
            for="user_name"
            class="absolute left-1 -top-7 bg-transparent text-sm leading-7 text-cyan-400 transition-all peer-placeholder-shown:left-3 peer-placeholder-shown:top-2 peer-placeholder-shown:text-base peer-placeholder-shown:text-gray-500 peer-focus:left-3 peer-focus:-top-6 peer-focus:text-sm peer-focus:text-cyan-300"
            >Nombre</label
          >
        </div>
      </div>
      <div class="mt-4 w-full p-2 md:w-1/2 md:mt-0">
        <div class="relative">
          <input
            type="email"
            name="user_email"
            id="user_email"
            required
            class="peer w-full rounded border border-gray-700 hover:border-white bg-gray-800 bg-opacity-40 py-1 px-3 text-base leading-8 text-gray-100 placeholder-transparent outline-none transition-colors duration-200 ease-in-out focus:border-gray-600 focus:bg-gray-800 focus:ring-2 focus:ring-zinc-400"
            placeholder=""
          />
          <label
            for="user_email"
            class="absolute left-1 -top-7 bg-transparent text-sm leading-7 text-cyan-400 transition-all peer-placeholder-shown:left-3 peer-placeholder-shown:top-2 peer-placeholder-shown:text-base peer-placeholder-shown:text-gray-500 peer-focus:left-3 peer-focus:-top-6 peer-focus:text-sm peer-focus:text-cyan-300"
            >Email</label
          >
        </div>
      </div>
      <div class="mt-4 w-full p-2">
        <div class="relative">
          <textarea
            id="message"
            name="message"
            class="peer h-32 w-full resize-none rounded border border-gray-700 hover:border-white bg-gray-800 bg-opacity-40 py-1 px-3 text-base leading-6 text-gray-100 placeholder-transparent transition-colors duration-200 ease-in-out focus:border-gray-600 focus:bg-gray-800 focus:ring-2 focus:ring-zinc-400 outline-none"
            placeholder=""></textarea>
          <label
            for="message"
            class="absolute left-1 -top-7 bg-transparent text-sm leading-7 text-cyan-400 transition-all peer-placeholder-shown:left-3 peer-placeholder-shown:top-2 peer-placeholder-shown:text-base peer-placeholder-shown:text-gray-500 peer-focus:left-3 peer-focus:-top-6 peer-focus:text-sm peer-focus:text-cyan-300"
            >Mensaje</label
          >
        </div>
      </div>
      <div class="w-full p-2">
        <input
          type="submit"
          id="button"
          value="Enviar mensaje"
          class="cursor-pointer mx-auto flex rounded py-2 px-8 text-lg text-black focus:outline-1"
        />
      </div>
    </form>
  </main>
</section>

<script
  type="text/javascript"
  src="https://cdn.jsdelivr.net/npm/@emailjs/browser@4/dist/email.min.js"
></script>

<script type="text/javascript">
  emailjs.init("M0qXtSYnIw_5LfW4p");

  const btn = document.getElementById("button");
  const showToastButton = document.getElementById("showToastButton");
  
  document.getElementById("form").addEventListener("submit", function (event) {
    event.preventDefault();

    btn.value = "Enviando...";

    const serviceID = "default_service";
    const templateID = "template_0magidq";

    emailjs.sendForm(serviceID, templateID, this).then(
      () => {
        Toastify({
          text: "Mensaje enviado con exito",
          duration: 3000,
          gravity: "bottom",
          position: "center",
          style: {
            color: "#fff",
            background:
              "linear-gradient(to right, #00b972, #00a859 40%, #0077ff)",
            border: "1px solid #fff",
          },
        }).showToast();
        btn.value = "Enviar mensaje";
        this.reset();
      },
      (err) => {
        Toastify({
          text: "Error al enviar el mensaje",
          duration: 3000,
          gravity: "bottom",
          position: "center",
          style: {
            color: "#fff",
            background: "linear-gradient(to right, #b22222, #ff4500, #d2691e)",
            border: "1px solid #fff",
          },
        }).showToast();
        btn.value = "Enviar mensaje";
      }
    );
  });

  //Animaci贸n del form
  const contactForm = document.getElementById("form");

  //funci贸n a ejecutar cuando el elemento entre en el viewport
  const showContact = (entradas, observador) => {
    entradas.forEach((entrada) => {
      if (entrada.isIntersecting) {
        entrada.target.classList.add("visible");
      }
    });
  };

  /* primer valor: funcion a ejecutar cuando el proyecto entre en el viewport */
  /* segundo valor: objeto de configuraciones */
  const contactFormObserver = new IntersectionObserver(showContact, {
    //contenedor donde se observan los cambios del elemento objetivo, (root: null) = todo el viewport se observara
    root: null,
    rootMargin: "0px 0px 0px 0px",
    threshold: 0.5,
  });

  contactFormObserver.observe(contactForm);

  //Animaci贸n del header
  const contactHeader = document.querySelector("#contact header");

  const showContactHeader = (entradas, observador) => {
    entradas.forEach((entrada) => {
      if (entrada.isIntersecting) {
        const h2 = entrada.target.children[0];
        const svg = entrada.target.children[1];

        h2.classList.add("fadeLeft");
        svg.classList.add("fadeRight");
      }
    });
  };

  const contactHeaderObserver = new IntersectionObserver(showContactHeader, {
    root: null,
    threshold: 1,
  });

  contactHeaderObserver.observe(contactHeader);

  //Animaci贸n del p y el svg debajo del header del form
  const containerFadeInDown = document.querySelector(".aboveContactForm");

  const fadeInDown = (entradas, observador) => {
    entradas.forEach((entrada) => {
      if (entrada.isIntersecting) {
        entrada.target.classList.add("fadeInDown");
      }
    });
  };

  const aboveContactForm = new IntersectionObserver(fadeInDown, {
    root: null,
    threshold: 1,
  });

  aboveContactForm.observe(containerFadeInDown);
</script>

<style>
  .visible {
    animation-name: fadeInUpShort;
    animation-duration: 1.5s;
    animation-fill-mode: both;
  }

  #button {
    background: linear-gradient(to right, #0f86bd 50%, white 50%);
    background-size: 200% 100%;
    background-position: right bottom;
    transition: 0.3s ease;
    border: 2px solid #fff;
    width: 190px;
    text-align: center;
  }

  #button:hover {
    background-position: left bottom;
    color: #fff;
  }

  header {
    h2 {
      text-shadow: 0 0 20px rgb(0, 255, 157);
      -webkit-text-stroke: 1px white;
      letter-spacing: 1px;
    }
    svg {
      filter: drop-shadow(0 0 10px rgb(0, 255, 157))
        drop-shadow(0 0 10px rgb(0, 255, 157));
    }
  }

  .fadeLeft {
    animation-name: fadeInLeft;
    animation-duration: 1.5s;
    animation-fill-mode: both;
  }
  .fadeRight {
    animation-name: fadeInRightSvg;
    animation-duration: 1.5s;
    animation-fill-mode: both;
  }

  .fadeInDown {
    animation-name: fadeInDownShort;
    animation-duration: 1.5s;
    animation-fill-mode: both;
  }
</style>
